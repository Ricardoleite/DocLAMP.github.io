Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/nbclient/client.py", line 626, in _async_poll_for_reply
    msg = await ensure_async(self.kc.shell_channel.get_msg(timeout=new_timeout))
  File "/usr/lib/python3/dist-packages/nbclient/util.py", line 96, in ensure_async
    result = await obj
  File "/home/ricardo/.local/lib/python3.10/site-packages/jupyter_client/channels.py", line 315, in get_msg
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ricardo/.local/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/lib/python3/dist-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/lib/python3/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/lib/python3/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/usr/lib/python3/dist-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/usr/lib/python3/dist-packages/nbclient/client.py", line 838, in async_execute_cell
    exec_reply = await self.task_poll_for_reply
  File "/usr/lib/python3/dist-packages/nbclient/client.py", line 650, in _async_poll_for_reply
    await self._async_handle_timeout(timeout, cell)
  File "/usr/lib/python3/dist-packages/nbclient/client.py", line 697, in _async_handle_timeout
    raise CellTimeoutError.error_from_timeout_and_cell(
nbclient.exceptions.CellTimeoutError: A cell timed out while it was being executed, after 30 seconds.
The message was: Cell execution timed out.
Here is a preview of the cell contents:
-------------------
['%pylab inline', 'A1r=linspace(0.001,0.5,1000)', 'B1r=linspace(0.001,0.5,1000)', 'Pr=np.array([0.050,0.100,0.500,1.000])', 'Ra=np.array([10.0**5,10.0**6])']
...
['            EK0=sum(EK)/len(EK)', "            print('IT',i*j,'MaxEK=',sum(EK)/len(EK),'MaxEK2=',sum(EK),'B1=',B1r[j],'A1=',A1r[i])", '#         if (max(EK)<EK0):', '#            EK0=max(EK)', "#            print('IT',i*j,'MaxEK=',max(EK),'B1=',B1r[j],'A1=',A1r[i])"]
-------------------

